 class Fraction {
    field int numerator, denominator;
    constructor Fraction new(int x, int y){
        let numerator = x;
        let denominator = y;
        do reduce(); // reduces the fraction
        return this; //returns the base address of the new object
    }

    method int getNumerator(){
        return numerator;
    }
    method int getDenominator(){
        return denominator;
    }

    method Fraction plus(Fraction other){
        var int sumNumerators;
        let sumNumerators = (numerator*other.getDenominator())+(other.getNumerator()*denominator);
        return Fraction.new(sumNumerators, denominator*other.getDenominator());
    }
    //method to reduce the fraction
    method void reduce(){
        var int g;
        let g= Fraction.gcd(numerator,denominator);
        if (g>1) {let numerator =numerator/g; let denominator = denominator/g;}
        return;
    }
    function int gcd(int a, int b){
        var int r;
        while (~(b=0)){
            let r = a-(b*(a/b));
            let a=b;
            let b=r;}
        return a;
        }

    method void dispose(){
        do Memory.deAlloc(this);
        return;
    } 
    method void print(){
        do Output.printString("The answer is: ");
        do Output.printInt(numerator);
        do Output.printString("/");
        do Output.printInt(denominator);
        return;
    }
}